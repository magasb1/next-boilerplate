// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db/database.db"
}

model User {
  id            String    @default(cuid()) @id
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  username      String?   @unique
  firstName     String?
  lastName      String?
  employeeNum   String?
  password      String?
  order         OrderDetail[]
  lastLogin     DateTime?
  tokenVersion  Int?      @default(0)
  active        Boolean   @default(true)
}

model Product {
  id            String    @default(cuid()) @id
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  name          String    @unique
  description   String?
  partNum       String?
  partNum2      String?
  picture       String?
  category      ProductCategory[]
  inventory     ProductInventory? @relation(fields: [inventoryId], references: [id])
  inventoryId   String?   @unique
  order         OrderItem[]
}

model ProductInventory {
  id            String    @default(cuid()) @id
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  quantity      Int
  product       Product[]
}

model ProductCategory {
  id            String    @default(cuid()) @id
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  name          String
  description   String?
  product       Product[]
}

model OrderItem {
  id            String    @default(cuid()) @id
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  order         OrderDetail? @relation(fields: [orderId], references: [id])
  orderId       String?
  product       Product?  @relation(fields: [productId], references: [id])
  productId     String?
  quantity      Int?
}

model OrderDetail {
  id            String    @default(cuid()) @id
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  items         OrderItem[]
}